@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model Blog.Models.ViewModels.BlogDetailsViewModel


@{
    ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if(Model != null){
                <h1 class="mb-3">@Model.Heading</h1>

                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                </div>
                
                <div class="mb-3">
                    @if(signInManager.IsSignedIn(User))
                    {
                       if(Model.Liked)
                        {
                            <a style="cursor:pointer;">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
                            </a>
                        }
                        else
                        {
                            <a id="btnLike" style="cursor:pointer;">
                                <i class="bi bi-hand-thumbs-up"></i>
                            </a>
                        }
                    }
                    <span id="spnTotalLikes">@Model.TotalLikes</span> likes
                </div>

                <div class="mb-3 d-flex">
                    @foreach (var tag in Model.Tags){
                        <span class="badge bg-secondary me-1">@tag.Name</span>
                    }
                </div>

                <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-3">

                <div class="mb-3 blog-details-content">
                    @Html.Raw(Model.Content)
                </div>

            }else{
                <p>O post n√£o foi encontrado!!!</p>
            }

        </div>
    </div>
</div>

@section Scripts{
    <script>
        const btn = document.getElementById('btnLike');
        const spn = document.getElementById('spnTotalLikes');

        async function getTotalLikes() {
            fetch('/api/BlogPostLike/@Model.Id/totalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            })
                .then(data => data.json())
                .then(result => spn.innerHTML = result);
        }

        async function addLike() {
            fetch('/api/BlogPostLike/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept':'*/*'
                },
                body:JSON.stringify({
                    BlogPostId: '@Model.Id',
                    UserId: '@userManager.GetUserId(User)'
                })
            }).then(() => {
                btn.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btn.removeEventListener('click', addLike);
                getTotalLikes();
            });
        }

        btn.addEventListener('click', addLike);
    </script>
}